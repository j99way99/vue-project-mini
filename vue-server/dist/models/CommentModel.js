"use strict";

const mongoose = require('mongoose');

const commentSchema = mongoose.Schema({
  post: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Post',
    require: true
  },
  author: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  parentComment: {
    // 1
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Comment'
  },
  text: {
    type: String,
    required: true
  },
  depth: {
    type: Number,
    default: 1
  },
  isDeleted: {
    // 2
    type: Boolean,
    default: false
  },
  createdAt: {
    type: Date,
    default: Date.now
  },
  updatedAt: {
    type: Date
  }
}, {
  toObject: {
    virtuals: true
  },
  toJSON: {
    virtuals: true
  }
});
commentSchema.virtual('comments', {
  ref: 'Comment',
  localField: '_id',
  foreignField: 'parentComment'
});
commentSchema.virtual('childComments').get(function () {
  return this._childComments;
}).set(function (v) {
  this._childComments = v;
});
module.exports = mongoose.model('Comment', commentSchema);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvQ29tbWVudE1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImNvbW1lbnRTY2hlbWEiLCJTY2hlbWEiLCJwb3N0IiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJhdXRob3IiLCJyZXF1aXJlZCIsInBhcmVudENvbW1lbnQiLCJ0ZXh0IiwiU3RyaW5nIiwiZGVwdGgiLCJOdW1iZXIiLCJkZWZhdWx0IiwiaXNEZWxldGVkIiwiQm9vbGVhbiIsImNyZWF0ZWRBdCIsIkRhdGUiLCJub3ciLCJ1cGRhdGVkQXQiLCJ0b09iamVjdCIsInZpcnR1YWxzIiwidG9KU09OIiwidmlydHVhbCIsImxvY2FsRmllbGQiLCJmb3JlaWduRmllbGQiLCJnZXQiLCJfY2hpbGRDb21tZW50cyIsInNldCIsInYiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxNQUFNQyxhQUFhLEdBQUdGLFFBQVEsQ0FBQ0csTUFBVCxDQUNwQjtBQUNFQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsSUFBSSxFQUFFTCxRQUFRLENBQUNHLE1BQVQsQ0FBZ0JHLEtBQWhCLENBQXNCQyxRQUR4QjtBQUVKQyxJQUFBQSxHQUFHLEVBQUUsTUFGRDtBQUdKUCxJQUFBQSxPQUFPLEVBQUU7QUFITCxHQURSO0FBTUVRLEVBQUFBLE1BQU0sRUFBRTtBQUNOSixJQUFBQSxJQUFJLEVBQUVMLFFBQVEsQ0FBQ0csTUFBVCxDQUFnQkcsS0FBaEIsQ0FBc0JDLFFBRHRCO0FBRU5DLElBQUFBLEdBQUcsRUFBRSxNQUZDO0FBR05FLElBQUFBLFFBQVEsRUFBRTtBQUhKLEdBTlY7QUFXRUMsRUFBQUEsYUFBYSxFQUFFO0FBQUU7QUFDZk4sSUFBQUEsSUFBSSxFQUFFTCxRQUFRLENBQUNHLE1BQVQsQ0FBZ0JHLEtBQWhCLENBQXNCQyxRQURmO0FBRWJDLElBQUFBLEdBQUcsRUFBRTtBQUZRLEdBWGpCO0FBZUVJLEVBQUFBLElBQUksRUFBRTtBQUNKUCxJQUFBQSxJQUFJLEVBQUVRLE1BREY7QUFFSkgsSUFBQUEsUUFBUSxFQUFFO0FBRk4sR0FmUjtBQW1CRUksRUFBQUEsS0FBSyxFQUFFO0FBQ0xULElBQUFBLElBQUksRUFBRVUsTUFERDtBQUVMQyxJQUFBQSxPQUFPLEVBQUU7QUFGSixHQW5CVDtBQXVCRUMsRUFBQUEsU0FBUyxFQUFFO0FBQUU7QUFDWFosSUFBQUEsSUFBSSxFQUFFYSxPQURHO0FBRVRGLElBQUFBLE9BQU8sRUFBRTtBQUZBLEdBdkJiO0FBMkJFRyxFQUFBQSxTQUFTLEVBQUU7QUFDVGQsSUFBQUEsSUFBSSxFQUFFZSxJQURHO0FBRVRKLElBQUFBLE9BQU8sRUFBRUksSUFBSSxDQUFDQztBQUZMLEdBM0JiO0FBK0JFQyxFQUFBQSxTQUFTLEVBQUU7QUFDVGpCLElBQUFBLElBQUksRUFBRWU7QUFERztBQS9CYixDQURvQixFQW9DcEI7QUFBRUcsRUFBQUEsUUFBUSxFQUFFO0FBQUVDLElBQUFBLFFBQVEsRUFBRTtBQUFaLEdBQVo7QUFBZ0NDLEVBQUFBLE1BQU0sRUFBRTtBQUFFRCxJQUFBQSxRQUFRLEVBQUU7QUFBWjtBQUF4QyxDQXBDb0IsQ0FBdEI7QUFzQ0F0QixhQUFhLENBQUN3QixPQUFkLENBQXNCLFVBQXRCLEVBQWtDO0FBQ2hDbEIsRUFBQUEsR0FBRyxFQUFFLFNBRDJCO0FBRWhDbUIsRUFBQUEsVUFBVSxFQUFFLEtBRm9CO0FBR2hDQyxFQUFBQSxZQUFZLEVBQUU7QUFIa0IsQ0FBbEM7QUFNQTFCLGFBQWEsQ0FDVndCLE9BREgsQ0FDVyxlQURYLEVBRUdHLEdBRkgsQ0FFTyxZQUFZO0FBQ2YsU0FBTyxLQUFLQyxjQUFaO0FBQ0QsQ0FKSCxFQUtHQyxHQUxILENBS08sVUFBVUMsQ0FBVixFQUFhO0FBQ2hCLE9BQUtGLGNBQUwsR0FBc0JFLENBQXRCO0FBQ0QsQ0FQSDtBQVNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJsQyxRQUFRLENBQUNtQyxLQUFULENBQWUsU0FBZixFQUEwQmpDLGFBQTFCLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuY29uc3QgY29tbWVudFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYShcbiAge1xuICAgIHBvc3Q6IHtcbiAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1Bvc3QnLFxuICAgICAgcmVxdWlyZTogdHJ1ZSxcbiAgICB9LFxuICAgIGF1dGhvcjoge1xuICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnVXNlcicsXG4gICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB9LFxuICAgIHBhcmVudENvbW1lbnQ6IHsgLy8gMVxuICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnQ29tbWVudCcsXG4gICAgfSxcbiAgICB0ZXh0OiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB9LFxuICAgIGRlcHRoOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAxLFxuICAgIH0sXG4gICAgaXNEZWxldGVkOiB7IC8vIDJcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZSxcbiAgICB9LFxuICAgIGNyZWF0ZWRBdDoge1xuICAgICAgdHlwZTogRGF0ZSxcbiAgICAgIGRlZmF1bHQ6IERhdGUubm93LFxuICAgIH0sXG4gICAgdXBkYXRlZEF0OiB7XG4gICAgICB0eXBlOiBEYXRlLFxuICAgIH0sXG4gIH0sXG4gIHsgdG9PYmplY3Q6IHsgdmlydHVhbHM6IHRydWUgfSwgdG9KU09OOiB7IHZpcnR1YWxzOiB0cnVlIH0gfSxcbik7XG5jb21tZW50U2NoZW1hLnZpcnR1YWwoJ2NvbW1lbnRzJywge1xuICByZWY6ICdDb21tZW50JyxcbiAgbG9jYWxGaWVsZDogJ19pZCcsXG4gIGZvcmVpZ25GaWVsZDogJ3BhcmVudENvbW1lbnQnLFxufSk7XG5cbmNvbW1lbnRTY2hlbWFcbiAgLnZpcnR1YWwoJ2NoaWxkQ29tbWVudHMnKVxuICAuZ2V0KGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5fY2hpbGRDb21tZW50cztcbiAgfSlcbiAgLnNldChmdW5jdGlvbiAodikge1xuICAgIHRoaXMuX2NoaWxkQ29tbWVudHMgPSB2O1xuICB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnQ29tbWVudCcsIGNvbW1lbnRTY2hlbWEpOyJdfQ==